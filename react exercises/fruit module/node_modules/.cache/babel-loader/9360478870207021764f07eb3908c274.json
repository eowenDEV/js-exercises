{"ast":null,"code":"//returns a randomly selected item from array of items\nfunction choice(items) {\n  return items[Math.floor(Math.random() * items.length)];\n} //removes the first matching item from items, if item exists and returns it. If not found, return undefined\n\n\nfunction remove(items, item) {\n  let found = true;\n  console.log(`find item ${item}`);\n\n  for (let i = 0; i < items.length; i++) {\n    console.log(`i${i}: ${items[i]}`);\n\n    if (item === items[i]) {\n      items.splice(i, 1);\n      found = true;\n      break;\n    } else {\n      console.log(`xi${i}: ${items[i]}`);\n      found = false;\n    }\n  }\n\n  console.log(`found = ${found}`);\n\n  if (!found) {\n    return null;\n  }\n\n  return 'found';\n}\n\nexport { choice, remove };","map":{"version":3,"sources":["C:/Users/panda/Desktop/js-exercises/react exercises/fruit-module/src/helpers.js"],"names":["choice","items","Math","floor","random","length","remove","item","found","console","log","i","splice"],"mappings":"AAAA;AACA,SAASA,MAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAOA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAZ;AACH,C,CAED;;;AACA,SAASC,MAAT,CAAgBL,KAAhB,EAAuBM,IAAvB,EAA6B;AACzB,MAAIC,KAAK,GAAG,IAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,IAAK,EAA9B;;AACA,OAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEV,KAAK,CAACI,MAAxB,EAAgCM,CAAC,EAAjC,EACA;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAa,IAAGC,CAAE,KAAIV,KAAK,CAACU,CAAD,CAAI,EAA/B;;AACA,QAAGJ,IAAI,KAAKN,KAAK,CAACU,CAAD,CAAjB,EAAqB;AACjBV,MAAAA,KAAK,CAACW,MAAN,CAAaD,CAAb,EAAgB,CAAhB;AACAH,MAAAA,KAAK,GAAG,IAAR;AACA;AACH,KAJD,MAIO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAa,KAAIC,CAAE,KAAIV,KAAK,CAACU,CAAD,CAAI,EAAhC;AACAH,MAAAA,KAAK,GAAG,KAAR;AACH;AACJ;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAUF,KAAM,EAA7B;;AACA,MAAG,CAACA,KAAJ,EAAW;AACP,WAAO,IAAP;AACH;;AACD,SAAO,OAAP;AACH;;AAED,SAAQR,MAAR,EAAgBM,MAAhB","sourcesContent":["//returns a randomly selected item from array of items\r\nfunction choice (items) {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\n//removes the first matching item from items, if item exists and returns it. If not found, return undefined\r\nfunction remove(items, item) {\r\n    let found = true;\r\n    console.log(`find item ${item}`);\r\n    for(let i = 0; i< items.length; i++)\r\n    {\r\n        console.log(`i${i}: ${items[i]}`);\r\n        if(item === items[i]){\r\n            items.splice(i, 1);\r\n            found = true;\r\n            break;\r\n        } else {\r\n            console.log(`xi${i}: ${items[i]}`);\r\n            found = false;\r\n        }\r\n    }\r\n    console.log(`found = ${found}`);\r\n    if(!found) {\r\n        return null;\r\n    }\r\n    return 'found';\r\n}\r\n\r\nexport {choice, remove};"]},"metadata":{},"sourceType":"module"}